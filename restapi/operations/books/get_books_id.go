package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"revised-server/models"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBooksIDHandlerFunc turns a function with the right signature into a get books ID handler
type GetBooksIDHandlerFunc func(GetBooksIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBooksIDHandlerFunc) Handle(params GetBooksIDParams) middleware.Responder {
	return fn(params)
}

// GetBooksIDHandler interface for that can handle valid get books ID params
type GetBooksIDHandler interface {
	Handle(GetBooksIDParams) middleware.Responder
}

// NewGetBooksID creates a new http.Handler for the get books ID operation
func NewGetBooksID(ctx *middleware.Context, handler GetBooksIDHandler) *GetBooksID {
	return &GetBooksID{Context: ctx, Handler: handler}
}

/*GetBooksID swagger:route GET /books/{id} Books getBooksId

Books

Returns the single book with the matching ID.

*/
type GetBooksID struct {
	Context *middleware.Context
	Handler GetBooksIDHandler
}

func (o *GetBooksID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetBooksIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

/*GetBooksIDOKBody get books ID o k body

swagger:model GetBooksIDOKBody
*/
type GetBooksIDOKBody struct {

	/* resource

	Required: true
	*/
	Resource *models.Book `json:"resource"`
}

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"revised-server/models"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBooksHandlerFunc turns a function with the right signature into a get books handler
type GetBooksHandlerFunc func(GetBooksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBooksHandlerFunc) Handle(params GetBooksParams) middleware.Responder {
	return fn(params)
}

// GetBooksHandler interface for that can handle valid get books params
type GetBooksHandler interface {
	Handle(GetBooksParams) middleware.Responder
}

// NewGetBooks creates a new http.Handler for the get books operation
func NewGetBooks(ctx *middleware.Context, handler GetBooksHandler) *GetBooks {
	return &GetBooks{Context: ctx, Handler: handler}
}

/*GetBooks swagger:route GET /books Books getBooks

Get books

The Books endpoint returns information about the books with
available data on reVISed.


*/
type GetBooks struct {
	Context *middleware.Context
	Handler GetBooksHandler
}

func (o *GetBooks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetBooksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

/*GetBooksOKBody get books o k body

swagger:model GetBooksOKBody
*/
type GetBooksOKBody struct {

	/* books

	Required: true
	*/
	Books []*models.Book `json:"books"`
}

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"revised-server/models"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostBooksHandlerFunc turns a function with the right signature into a post books handler
type PostBooksHandlerFunc func(PostBooksParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostBooksHandlerFunc) Handle(params PostBooksParams) middleware.Responder {
	return fn(params)
}

// PostBooksHandler interface for that can handle valid post books params
type PostBooksHandler interface {
	Handle(PostBooksParams) middleware.Responder
}

// NewPostBooks creates a new http.Handler for the post books operation
func NewPostBooks(ctx *middleware.Context, handler PostBooksHandler) *PostBooks {
	return &PostBooks{Context: ctx, Handler: handler}
}

/*PostBooks swagger:route POST /books Books postBooks

Create a new book

Create an entry for a new book.

*/
type PostBooks struct {
	Context *middleware.Context
	Handler PostBooksHandler
}

func (o *PostBooks) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostBooksParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

/*PostBooksOKBody post books o k body

swagger:model PostBooksOKBody
*/
type PostBooksOKBody struct {

	/* book

	Required: true
	*/
	Book *models.Book `json:"book"`
}

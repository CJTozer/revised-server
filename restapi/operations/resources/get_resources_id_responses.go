package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"revised-server/models"
)

/*GetResourcesIDOK The requested resource

swagger:response getResourcesIdOK
*/
type GetResourcesIDOK struct {

	// In: body
	Payload GetResourcesIDOKBody `json:"body,omitempty"`
}

// NewGetResourcesIDOK creates GetResourcesIDOK with default headers values
func NewGetResourcesIDOK() *GetResourcesIDOK {
	return &GetResourcesIDOK{}
}

// WithPayload adds the payload to the get resources Id o k response
func (o *GetResourcesIDOK) WithPayload(payload GetResourcesIDOKBody) *GetResourcesIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get resources Id o k response
func (o *GetResourcesIDOK) SetPayload(payload GetResourcesIDOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResourcesIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetResourcesIDDefault Unexpected error

swagger:response getResourcesIdDefault
*/
type GetResourcesIDDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetResourcesIDDefault creates GetResourcesIDDefault with default headers values
func NewGetResourcesIDDefault(code int) *GetResourcesIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetResourcesIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get resources ID default response
func (o *GetResourcesIDDefault) WithStatusCode(code int) *GetResourcesIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get resources ID default response
func (o *GetResourcesIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get resources ID default response
func (o *GetResourcesIDDefault) WithPayload(payload *models.Error) *GetResourcesIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get resources ID default response
func (o *GetResourcesIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResourcesIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

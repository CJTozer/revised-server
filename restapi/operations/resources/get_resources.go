package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"revised-server/models"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetResourcesHandlerFunc turns a function with the right signature into a get resources handler
type GetResourcesHandlerFunc func(GetResourcesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetResourcesHandlerFunc) Handle(params GetResourcesParams) middleware.Responder {
	return fn(params)
}

// GetResourcesHandler interface for that can handle valid get resources params
type GetResourcesHandler interface {
	Handle(GetResourcesParams) middleware.Responder
}

// NewGetResources creates a new http.Handler for the get resources operation
func NewGetResources(ctx *middleware.Context, handler GetResourcesHandler) *GetResources {
	return &GetResources{Context: ctx, Handler: handler}
}

/*GetResources swagger:route GET /resources Resources getResources

Resources

The Resources endpoint returns information about all the resources
for any books on reVISed.


*/
type GetResources struct {
	Context *middleware.Context
	Handler GetResourcesHandler
}

func (o *GetResources) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetResourcesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

/*GetResourcesOKBody get resources o k body

swagger:model GetResourcesOKBody
*/
type GetResourcesOKBody struct {

	/* resources

	Required: true
	*/
	Resources []*models.Resource `json:"resources"`
}

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"revised-server/models"
)

/*GetResourcesOK An array of resources

swagger:response getResourcesOK
*/
type GetResourcesOK struct {

	// In: body
	Payload GetResourcesOKBody `json:"body,omitempty"`
}

// NewGetResourcesOK creates GetResourcesOK with default headers values
func NewGetResourcesOK() *GetResourcesOK {
	return &GetResourcesOK{}
}

// WithPayload adds the payload to the get resources o k response
func (o *GetResourcesOK) WithPayload(payload GetResourcesOKBody) *GetResourcesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get resources o k response
func (o *GetResourcesOK) SetPayload(payload GetResourcesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResourcesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetResourcesDefault Unexpected error

swagger:response getResourcesDefault
*/
type GetResourcesDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetResourcesDefault creates GetResourcesDefault with default headers values
func NewGetResourcesDefault(code int) *GetResourcesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetResourcesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get resources default response
func (o *GetResourcesDefault) WithStatusCode(code int) *GetResourcesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get resources default response
func (o *GetResourcesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get resources default response
func (o *GetResourcesDefault) WithPayload(payload *models.Error) *GetResourcesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get resources default response
func (o *GetResourcesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetResourcesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
